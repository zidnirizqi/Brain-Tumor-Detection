package app;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class Main extends javax.swing.JFrame {
/**
 *
 * @author T490S
 */
    public Main() {
        initComponents();
        loadDataAlternatif();
        loadDataKriteria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        btnTambahAlternatif = new javax.swing.JButton();
        btnRefreshAlternatif = new javax.swing.JButton();
        btnHapusAlternatif = new javax.swing.JButton();
        btnUpdateAlternatif = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelAlternatif = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnTambahKriteria = new javax.swing.JButton();
        btnHapusKriteria = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnUpdateKriteria = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelKriteria = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnSPK = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelSPK = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new java.awt.BorderLayout());

        btnTambahAlternatif.setText("Tambah Alternatif");
        btnTambahAlternatif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahAlternatifActionPerformed(evt);
            }
        });

        btnRefreshAlternatif.setText("Refresh");
        btnRefreshAlternatif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshAlternatifActionPerformed(evt);
            }
        });

        btnHapusAlternatif.setText("HAPUS");
        btnHapusAlternatif.setEnabled(false);
        btnHapusAlternatif.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHapusAlternatifMouseClicked(evt);
            }
        });
        btnHapusAlternatif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusAlternatifActionPerformed(evt);
            }
        });

        btnUpdateAlternatif.setText("UPDATE");
        btnUpdateAlternatif.setEnabled(false);
        btnUpdateAlternatif.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateAlternatifMouseClicked(evt);
            }
        });
        btnUpdateAlternatif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAlternatifActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(188, Short.MAX_VALUE)
                .addComponent(btnHapusAlternatif, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRefreshAlternatif, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdateAlternatif, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnTambahAlternatif, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(474, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnUpdateAlternatif, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRefreshAlternatif, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapusAlternatif, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnTambahAlternatif, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel9.setLayout(new java.awt.BorderLayout());

        tabelAlternatif.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelAlternatif.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelAlternatifMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelAlternatif);

        jPanel9.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 652, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 502, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addGap(0, 4, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(427, 427, 427)))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addGap(0, 71, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.add(jPanel7, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Alternatif", jPanel2);

        btnTambahKriteria.setText("Tambah Kriteria");
        btnTambahKriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahKriteriaActionPerformed(evt);
            }
        });

        btnHapusKriteria.setText("Hapus Kriteria");
        btnHapusKriteria.setEnabled(false);
        btnHapusKriteria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHapusKriteriaMouseClicked(evt);
            }
        });
        btnHapusKriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusKriteriaActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnUpdateKriteria.setText("Update");
        btnUpdateKriteria.setEnabled(false);
        btnUpdateKriteria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateKriteriaMouseClicked(evt);
            }
        });
        btnUpdateKriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateKriteriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(btnHapusKriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdateKriteria)
                .addContainerGap(164, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnTambahKriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(486, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHapusKriteria, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateKriteria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnTambahKriteria, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        tabelKriteria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelKriteria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelKriteriaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelKriteria);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 651, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 421, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addGap(0, 111, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("Kriteria", jPanel3);

        btnSPK.setText("Hasil");
        btnSPK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSPKActionPerformed(evt);
            }
        });

        jButton2.setText("Urutkan");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(483, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(98, 98, 98))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnSPK, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(479, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnSPK, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        tabelSPK.setAutoCreateRowSorter(true);
        tabelSPK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabelSPK);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 651, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 651, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 432, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(0, 83, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("SPK", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahAlternatifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahAlternatifActionPerformed
        // TODO add your handling code here:
        tambahAlternatif t = new tambahAlternatif(this, true);
        t.setVisible(true);
    }//GEN-LAST:event_btnTambahAlternatifActionPerformed

    private void btnSPKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSPKActionPerformed
        SPK_SAW();
    }//GEN-LAST:event_btnSPKActionPerformed

    private void btnRefreshAlternatifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshAlternatifActionPerformed
        // TODO add your handling code here:
        tabelAlternatif.clearSelection();
        btnHapusAlternatif.setEnabled(true);
        btnUpdateAlternatif.setEnabled(true);
    }//GEN-LAST:event_btnRefreshAlternatifActionPerformed

    private void btnTambahKriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahKriteriaActionPerformed
        // TODO add your    handling code here:
        tambahKriteria t = new tambahKriteria(this, true);
        t.setVisible(true);
    }//GEN-LAST:event_btnTambahKriteriaActionPerformed

    private void btnHapusKriteriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHapusKriteriaMouseClicked
        // TODO add your handling code here:
        int i = tabelKriteria.getSelectedRow();
        if (i != -1) {
            btnHapusKriteria.setEnabled(true);
            btnUpdateKriteria.setEnabled(true);

        }
    }//GEN-LAST:event_btnHapusKriteriaMouseClicked

    private void btnHapusKriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusKriteriaActionPerformed
        // TODO add your handling code here:
        Object[] str = {"Ya, Hapus Saja", "Tidak"};
        int pilihan = JOptionPane.showOptionDialog(this, "Apakah anda yakin ingin  menghaous data", "hapus data", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, str, 0);
        if (pilihan == 0) {
            try {
                int i = tabelKriteria.getSelectedRow();
                Object id = tabelKriteria.getValueAt(i, 0);
                String q = "DELETE FROM kriteria WHERE id='" + id + "'";
                Connection koneksi = Koneksi.konekKeDB();
                Statement st = koneksi.createStatement();
                st.executeUpdate(q);
                Main.loadDataKriteria();
            } catch (Exception e) {
            }
        } else {

        }

    }//GEN-LAST:event_btnHapusKriteriaActionPerformed

    private void btnUpdateKriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateKriteriaActionPerformed
        // TODO add your handling code here:
        updateKriteria p = new updateKriteria(this, true);

        int i = tabelKriteria.getSelectedRow();
        String id = tabelKriteria.getValueAt(i, 0).toString();
        String kriteria = tabelKriteria.getValueAt(i, 1).toString();
        String bobot = tabelKriteria.getValueAt(i, 2).toString();
        String label = tabelKriteria.getValueAt(i, 3).toString();
        int id_int = Integer.parseInt(id);

        p.setId(id_int);
        p.setKriteria(kriteria);
        p.setBobot(bobot);
        p.setLabel(label);

        p.setVisible(true);
    }//GEN-LAST:event_btnUpdateKriteriaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        tabelKriteria.clearSelection();
        btnHapusKriteria.setEnabled(true);
        btnUpdateKriteria.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tabelKriteriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelKriteriaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelKriteriaMouseClicked

    private void btnUpdateKriteriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateKriteriaMouseClicked
        // TODO add your handling code here:
        int i = tabelKriteria.getSelectedRow();
        if (i != -1) {
            btnHapusKriteria.setEnabled(true);
            btnUpdateKriteria.setEnabled(true);

        }
    }//GEN-LAST:event_btnUpdateKriteriaMouseClicked

    private void btnHapusAlternatifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusAlternatifActionPerformed
        // TODO add your handling code here:
        Object[] str = {"Ya, Hapus", "Tidak"};
        int pilihan = JOptionPane.showOptionDialog(this, "Apakah anda yakin ingin  menghapus data", "hapus data", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, str, 0);
        if (pilihan == 0) {
            try {
                int i = tabelAlternatif.getSelectedRow();
                Object id = tabelAlternatif.getValueAt(i, 0);
                String q = "DELETE FROM alternatif WHERE id='" + id + "'";
                Connection koneksi = Koneksi.konekKeDB();
                Statement st = koneksi.createStatement();
                st.executeUpdate(q);
                Main.loadDataAlternatif();
            } catch (Exception e) {
            }
        } else {

        }
    }//GEN-LAST:event_btnHapusAlternatifActionPerformed

    private void tabelAlternatifMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelAlternatifMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tabelAlternatifMouseClicked

    private void btnHapusAlternatifMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHapusAlternatifMouseClicked
        // TODO add your handling code here:
        int i = tabelAlternatif.getSelectedRow();
        if (i != -1) {
            btnHapusAlternatif.setEnabled(true);
            btnUpdateKriteria.setEnabled(true);

        }
    }//GEN-LAST:event_btnHapusAlternatifMouseClicked

    private void btnUpdateAlternatifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAlternatifActionPerformed
        // TODO add your handling code here:
        updateAlternatif A = new updateAlternatif(this, true);

        int i = tabelAlternatif.getSelectedRow();
        String id = tabelAlternatif.getValueAt(i, 0).toString();
        String alternatif = tabelAlternatif.getValueAt(i, 1).toString();
        String biaya = tabelAlternatif.getValueAt(i, 2).toString();
        String keandalan = tabelAlternatif.getValueAt(i, 3).toString();
        String kecepatan = tabelAlternatif.getValueAt(i, 4).toString();
        String cakupanWilayah = tabelAlternatif.getValueAt(i, 5).toString();
        String kualitas = tabelAlternatif.getValueAt(i, 6).toString();

        int id_int = Integer.parseInt(id);

        A.setId(id_int);
        A.setAlternatif(alternatif);
        A.setBiaya(biaya);
        A.setKeandalan(keandalan);
        A.setKecepatan(kecepatan);
        A.setCakupanWilayah(cakupanWilayah);
        A.setKualitas(kualitas);

        A.setVisible(true);
    }//GEN-LAST:event_btnUpdateAlternatifActionPerformed

    private void btnUpdateAlternatifMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateAlternatifMouseClicked
        // TODO add your handling code here:
        int i = tabelAlternatif.getSelectedRow();
        if (i != -1) {
            btnHapusAlternatif.setEnabled(true);
            btnUpdateAlternatif.setEnabled(true);

        }
    }//GEN-LAST:event_btnUpdateAlternatifMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(tabelSPK.getModel());
        tabelSPK.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();

        int columnIndexToSort = 2;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.DESCENDING));

        sorter.setSortKeys(sortKeys);
        sorter.sort();

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    public static void loadDataAlternatif() {
        try {
            // table design
            Object[][] data = null;
            Object[] header = {"id", "alternatif", "biaya", "keandalan", "kecepatan", "cakupan_wilayah", "kualitas"};
            DefaultTableModel model = new DefaultTableModel(data, header);
            tabelAlternatif.setModel(model);

            //read Data from MySQL DB
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT * FROM alternatif";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                int id = rs.getInt("id");
                String alternatif = rs.getString("alternatif");
                double biaya = rs.getDouble("biaya");
                double keandalan = rs.getDouble("keandalan");
                double kecepatan = rs.getDouble("kecepatan");
                double cakupanWilayah = rs.getDouble("cakupan_wilayah");
                double kualitas = rs.getDouble("kualitas");


                Object[] rowData = {id, alternatif, biaya, keandalan, kecepatan, cakupanWilayah, kualitas};
                model.addRow(rowData);
            }

        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    public static void loadDataKriteria() {
        try {
            // table design
            Object[][] data = null;
            Object[] header = {"ID", "KRITERIA", "BOBOT", "LABEL"};
            DefaultTableModel model = new DefaultTableModel(data, header);
            tabelKriteria.setModel(model);

            //read Data from MySQL DB
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT * FROM kriteria";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                int id = rs.getInt("id");
                String kriteria = rs.getString("kriteria");
                double bobot = rs.getDouble("bobot");
                String label = rs.getString("label");
                Object[] rowData = {id, kriteria, bobot, label};
                model.addRow(rowData);
            }

        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    private String label(String kriteria) {
        String label = "cost";
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT label FROM kriteria WHERE kriteria='" + kriteria + "'";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                label = rs.getString("label");
            }
            return label;

        } catch (Exception e) {
        }

        return label;
    }

    private double bobot(String kriteria) {
        double bobot = 0;
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT bobot FROM kriteria WHERE kriteria='" + kriteria + "'";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                bobot = rs.getDouble("bobot");
            }
            return bobot;

        } catch (Exception e) {
        }

        return bobot;
    }

    private double MIN(String kriteria) {
        double min = 0;
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT MIN(" + kriteria + ") AS minVal FROM alternatif";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                min = rs.getDouble("minVal");
            }
            return min;

        } catch (SQLException e) {
        }

        return min;
    }

    private double MAX(String kriteria) {
        double max = 0;
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT MAX(" + kriteria + ") AS maxVal FROM alternatif";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                max = rs.getDouble("maxVal");
            }
            return max;

        } catch (SQLException e) {
        }

        return max;
    }

    private void SPK_SAW() {
        try {
            //nomor auto increment
            int nomor = 0;

            //table design
            Object[] header = {"NO", "ALTERNATIF", "BOBOT"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data, header);
            tabelSPK.setModel(model);
            List<Double> L_hasil = new ArrayList();

            //read Data from DB
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT * FROM alternatif";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                int id = rs.getInt("id");
                String alternatif = rs.getString("alternatif");
                double biaya = rs.getDouble("biaya");
                double keandalan = rs.getDouble("keandalan");
                double kecepatan = rs.getDouble("kecepatan");
                double cakupanWilayah = rs.getDouble("cakupan_wilayah");
                double kualitas = rs.getDouble("kualitas");

                double pem_biaya = label("biaya").equals("benefitt") ? MAX("biaya") : MIN("biaya");
                double pem_keandalan = label("keandalan").equals("cost") ? MIN("keandalan") : MAX("keandalan");
                double pem_kecepatan = label("kecepatan").equals("cost") ? MIN("kecepatan") : MAX("kecepatan");
                double pem_cakupanWilayah = label("cakupanWilayah").equals("cost") ? MIN("cakupanWilayah") : MAX("cakupanWilayah");
                double pem_kualitas = label("kualitas").equals("cost") ? MIN("kualitas") : MAX("kualitas");
 

                double norm_biaya = label("biaya").equals("benefit") ? MAX("biaya") / biaya : biaya / MIN("biaya");
                double norm_keandalan = label("keandalan").equals("cost") ? MIN("keandalan") / keandalan : keandalan / MAX("keandalan");
                double norm_kecepatan = label("kecepatan").equals("cost") ? MIN("kecepatan") / kecepatan : kecepatan / MAX("kecepatan");
                double norm_cakupanWilayah = label("cakupanWilayah").equals("cost") ? MIN("cakupanWilayah") / cakupanWilayah : cakupanWilayah / MAX("cakupanWilayah");
                double norm_kualitas = label("kualitas").equals("cost") ? MIN("kualitas") / kualitas : kualitas / MAX("kualitas");


                double bobot_akhir = (bobot("biaya") * norm_biaya) +
                     (bobot("keandalan") * norm_keandalan) +
                     (bobot("kecepatan") * norm_kecepatan) +
                     (bobot("cakupanWilayah") * norm_cakupanWilayah) +
                     (bobot("kualitas") * norm_kualitas);

                nomor++;
                Double hasil = null;

                L_hasil.add(hasil);
                nomor++;
                Object[] rowData = {nomor, alternatif, bobot_akhir};
                model.addRow(rowData);
            }

        } catch (Exception e) {
            e.getMessage();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapusAlternatif;
    private javax.swing.JButton btnHapusKriteria;
    private javax.swing.JButton btnRefreshAlternatif;
    private javax.swing.JButton btnSPK;
    private javax.swing.JButton btnTambahAlternatif;
    private javax.swing.JButton btnTambahKriteria;
    private javax.swing.JButton btnUpdateAlternatif;
    private javax.swing.JButton btnUpdateKriteria;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private static javax.swing.JTable tabelAlternatif;
    private static javax.swing.JTable tabelKriteria;
    private javax.swing.JTable tabelSPK;
    // End of variables declaration//GEN-END:variables
}
